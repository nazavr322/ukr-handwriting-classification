services:
  postgres:
    container_name: postgres
    image: postgres:alpine
    environment:
      POSTGRES_DB: $POSTGRES_DB
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
    volumes:
      - ./Docker/postgres/:/var/lib/postgresql/data
    networks:
      - db
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  minio:
    container_name: minio
    hostname: minio
    image: quay.io/minio/minio
    command: server --console-address ":9001" /buckets/
    expose:
      - "9000"
      - "9001"
    networks:
      - s3
    environment:
      MINIO_ROOT_USER: $MINIO_ROOT_USER
      MINIO_ROOT_PASSWORD: $MINIO_ROOT_PASSWORD
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    volumes:
      - ./Docker/minio/:/buckets

  nginx:
    container_name: nginx
    hostname: nginx
    image: nginx:stable-alpine
    volumes:
      - ./Docker/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - s3
    depends_on:
      - minio

  minio_client:
    container_name: minio_client
    hostname: minio_client
    image: minio/mc
    depends_on:
      - nginx
    networks:
      - s3
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set myminio http://minio:9000 $MINIO_ROOT_USER $MINIO_ROOT_PASSWORD;
      /usr/bin/mc mb myminio/$MLFLOW_BUCKET_NAME;
      /usr/bin/mc admin user add myminio $AWS_ACCESS_KEY_ID $AWS_SECRET_ACCESS_KEY;
      /usr/bin/mc admin policy set myminio readwrite user=$AWS_ACCESS_KEY_ID;
      exit 0;
      "

  mlflow_server:
    container_name: mlflow_server
    image: nazavr/mlflow_server
    ports:
      - "5000:5000"
    networks:
      - s3
      - db
    environment:
      AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
      AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
      MLFLOW_S3_ENDPOINT_URL: http://nginx:9000
    command: mlflow server --backend-store-uri postgresql://$POSTGRES_USER:$POSTGRES_PASSWORD@postgres/$POSTGRES_DB --default-artifact-root s3://$MLFLOW_BUCKET_NAME --host 0.0.0.0
    depends_on:
      - postgres
      - minio_client

networks:
  s3:
    driver: bridge
  db:
    driver: bridge
